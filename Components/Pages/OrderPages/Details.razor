@page "/orders/details"
@inject NavigationManager NavigationManager
@inject OrderService OrderService

<PageTitle>Детали</PageTitle>

<h1>Детали заказа</h1>

<div>
    <h2>Заказ</h2>
    <hr />
    @if (order is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Сумма</dt>
            <dd class="col-sm-10">@order.Amount</dd>
            <dt class="col-sm-2">Статус</dt>
            <dd class="col-sm-10">@order.Status</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@order.UserEmail</dd>
            <dt class="col-sm-2">Книги</dt>
            <dd class="col-sm-10">
                @if (order.Items != null)
                {
                    @foreach (var item in order.Items)
                    {
                        <div>@item.Book?.Title (Количество: @item.Count)</div>
                    }
                }
            </dd>
        </dl>
        <div>
            <a href="@($"/orders/edit?orderid={order.OrderId}")">Редактировать</a> |
            <a href="@($"/orders")">Назад к списку</a>
        </div>
    }
</div>

@code {
    private Order? order;

    [SupplyParameterFromQuery]
    private int OrderId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.FindByIdAsync(OrderId);

        if (order is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}