@page "/reviews/details"
@inject NavigationManager NavigationManager
@inject ReviewService ReviewService

<PageTitle>Просмотр отзыва</PageTitle>

<h1>Просмотр отзыва</h1>

<div>
    <hr />
    @if (review is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">ID отзыва</dt>
            <dd class="col-sm-10">@review.ReviewId</dd>

            <dt class="col-sm-2">Книга</dt>
            <dd class="col-sm-10">@bookTitle (ID: @review.BookId)</dd>

            <dt class="col-sm-2">Оценка</dt>
            <dd class="col-sm-10">@review.Rating из 5</dd>

            <dt class="col-sm-2">Текст отзыва</dt>
            <dd class="col-sm-10" style="white-space: pre-line">@review.Text</dd>
        </dl>
        <div>
            <a href="@($"/reviews/edit?reviewid={review.ReviewId}")">Изменить</a> |
            <a href="@($"/reviews")">Назад к списку отзывов</a>
        </div>
    }
</div>

@code {
    private Review? review;
    private string bookTitle = string.Empty;

    [SupplyParameterFromQuery]
    private int ReviewId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        review = await ReviewService.FindByIdAsync(ReviewId);

        if (review is null)
        {
            NavigationManager.NavigateTo("notfound");
            return;
        }
        
        bookTitle = review.Book?.Title ?? string.Empty;
    }
}