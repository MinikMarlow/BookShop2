@page "/discounts/details"
@attribute [Authorize(Roles = "Administrator")]
@inject NavigationManager NavigationManager
@inject DiscountService DiscountService

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Discount</h2>
    <hr />
    @if (discount is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">BookId</dt>
            <dd class="col-sm-10">@discount.BookId</dd>
            <dt class="col-sm-2">ProcentSkidki</dt>
            <dd class="col-sm-10">@discount.DiscountRate</dd>
            <dt class="col-sm-2">DataNachala</dt>
            <dd class="col-sm-10">@discount.StartDate</dd>
            <dt class="col-sm-2">DataKonca</dt>
            <dd class="col-sm-10">@discount.EndDate</dd>
        </dl>
        <div>
            <a href="@($"/discounts/edit?discountid={discount.DiscountId}")">Edit</a> |
            <a href="@($"/discounts")">Back to List</a>
        </div>
    }
</div>

@code {
    private Discount? discount;

    [SupplyParameterFromQuery]
    private int DiscountId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        discount = await DiscountService.FindByIdAsync(DiscountId);

        if (discount is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
