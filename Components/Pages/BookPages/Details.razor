@page "/books/details"
@inject NavigationManager NavigationManager
@inject BookService BookService

<PageTitle>Просмотр</PageTitle>

<h1>Просмотр</h1>

<div>
    <hr />
    @if (book is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Название</dt>
            <dd class="col-sm-10">@book.Title</dd>
            <dt class="col-sm-2">Автор</dt>
            <dd class="col-sm-10">@book.Author</dd>
            <dt class="col-sm-2">Жанр</dt>
            <dd class="col-sm-10">@book.Genre</dd>
            <dt class="col-sm-2">Описание</dt>
            <dd class="col-sm-10">@book.Description</dd>
            <dt class="col-sm-2">Цена</dt>
            <dd class="col-sm-10">@book.Price</dd>
            <dt class="col-sm-2">Количество на складе</dt>
            <dd class="col-sm-10">@book.AvailableCount</dd>
            <dt class="col-sm-2">Изображение</dt>
            <dd class="col-sm-10">
                @if (!string.IsNullOrEmpty(book.ImageFileName))
                {
                    <img src="/uploads/books/@book.ImageFileName" style="max-width: 200px; max-height: 200px;" />
                }
                else
                {
                    <span>Нет изображения</span>
                }
            </dd>
        </dl>
        <div>
            <a href="@($"/books/edit?bookid={book.BookId}")">Изменить</a> |
            <a href="@($"/books")">Назад к списку книг</a>
        </div>
    }
</div>

@code {
    private Book? book;

    [SupplyParameterFromQuery]
    private int BookId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        book = await BookService.FindByIdAsync(BookId);

        if (book is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}